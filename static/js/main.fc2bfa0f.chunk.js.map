{"version":3,"sources":["Components/Country.js","Components/Wrapper.js","Components/Country-List.js","Components/Input.js","Components/Search.js","Components/Region.js","Components/Action-List.js","Components/Header.js","Components/CountrySelected.js","Pages/Country-Page.js","App.js","Redux/Reducer.js","serviceWorker.js","index.js"],"names":["CountryStyled","styled","div","Country","flag","name","population","region","capital","alpha2Code","nativeName","cioc","history","useHistory","onClick","push","slugify","loading","src","alt","className","WrapperStyled","Wrapper","children","CountryListStyled","CountryList","dispatch","useDispatch","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","console","log","useEffect","fetch","then","response","json","list","type","payload","catch","map","key","InputStyled","label","Input","props","SearchStyled","Search","useState","inputValue","setInputValue","class","placeholder","value","onChange","e","target","RegionFilterStyled","select","Region","selectEvent","regionSelected","ActionListStyled","ActionList","HeaderStyled","Header","setDarkMode","darkMode","to","CountrySelectedStyled","CountrySelected","subregion","topLevelDomain","currencies","languages","borders","item","CountryPageStyled","CountryPage","match","DBcountry","find","params","id","country","setCountry","toLowerCase","data","goBack","store","createStore","action","filter","includes","App","setChecked","mainClass","changeMedia","mq","matches","window","matchMedia","addListener","removeListener","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.fc2bfa0f.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from  'styled-components'\r\nimport {useHistory} from 'react-router-dom'\r\nimport slugify from 'slugify'\r\n\r\nconst CountryStyled= styled.div`\r\n    cursor:pointer;\r\n    text-align:left;\r\n    border-radius:5px;\r\n    box-shadow:0 0 7px 2px rgba(0,0,0,.15);\r\n    \r\n    &:hover .details{\r\n        border:1px solid var(--black);\r\n        border-radius:0 0 5px 5px;\r\n        border-top:none;\r\n    }\r\n    img{\r\n        width: 100% ;\r\n        height: 160px;\r\n        object-fit:cover;\r\n        border-radius: 5px 5px 0 0;\r\n        vertical-align:top;\r\n        \r\n    }\r\n    .details{\r\n        padding: 1.5em;\r\n        border: 1px solid transparent;\r\n        border-top: none;\r\n        transition: .2s border;\r\n        background: var(--white);\r\n    }\r\n    h2{\r\n        margin:0px;\r\n        margin-bottom:1rem;\r\n        font-size:18px;\r\n        font-weight:700;\r\n    }\r\n    p{\r\n        font-size:.9em;\r\n        margin-bottom:0.5rem;\r\n    }\r\n`   \r\n    \r\n\r\n\r\n\r\nfunction Country({\r\n    flag,\r\n    name,\r\n    population,\r\n    region,\r\n    capital,\r\n    nativeName,\r\n    cioc,\r\n    alpha2Code,\r\n}) {\r\n    \r\n     const history=useHistory()\r\n    const handleClick=()=>{\r\n        history.push(`/country/${slugify(alpha2Code)}`)\r\n    }\r\n    return (\r\n        <CountryStyled onClick={handleClick}> \r\n            \r\n            <img loading=\"lazy\" src={flag} alt=\"flag img\"/>\r\n            <div className=\"details\">\r\n                <h2>{name}</h2>\r\n                <p><strong>Population: </strong>{population}</p>\r\n                <p><strong>Region: </strong>{region}</p>\r\n                <p><strong>Capital: </strong>{capital}</p>\r\n            </div>\r\n            \r\n\r\n\r\n        </CountryStyled>\r\n    )\r\n}\r\n\r\nexport default Country\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst WrapperStyled=styled.div`\r\n    max-width:1312px;\r\n    margin:auto;\r\n    padding:0 1rem;\r\n`\r\n\r\nfunction Wrapper({children}) {\r\n    return (\r\n       <WrapperStyled>\r\n           {children}\r\n       </WrapperStyled>\r\n    )\r\n}\r\n\r\nexport default Wrapper","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Country from './Country'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport Wrapper from './Wrapper'\r\n\r\nconst CountryListStyled = styled.div`\r\n  display: grid;\r\n  grid-row-gap: 2.3em;\r\n  grid-auto-flow:columns;\r\n  grid-column-gap: 66px;\r\n  grid-template-columns: repeat(auto-fill, 270px);\r\n  background: var(--background);\r\n  justify-content: center;\r\n  padding: 3em 0;\r\n`\r\n\r\nfunction CountryList() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const countryListByName = useSelector((state) => state.countryListByName)\r\n\r\n  const countryList = useSelector((state) => {\r\n    if (state.filterByRegion !== '' && countryListByName.length === 0) {\r\n      return state.coutryFilteredByRegion;\r\n    }\r\n    if (countryListByName.length > 0) {\r\n      return countryListByName\r\n    }\r\n\r\n    return state.countryList;\r\n  })\r\n\r\n  console.log('el estado total de mi app es', countryList)\r\n  // const [countryList, setCountryList] = useState([])\r\n  useEffect(() => {\r\n    fetch('https://restcountries.eu/rest/v2/all')\r\n      .then((response) => {\r\n        return response.json()\r\n      })\r\n      .then((list) => {\r\n        dispatch({\r\n          type: 'SET_COUNTRY_LIST',\r\n          payload: list\r\n        })\r\n      })\r\n      .catch(() => {\r\n        console.log('hubo un error, que dolor que dolo que pena')\r\n      })\r\n  }, [dispatch])\r\n\r\n  \r\n\r\n  return (\r\n      <Wrapper> \r\n    <CountryListStyled>\r\n        {\r\n          countryList.map(({ name, flag, population, capital, region, nativeName, cioc, alpha2Code }) => {\r\n            return (\r\n              <Country\r\n              flag={flag}\r\n              name={name}\r\n              key={name}\r\n              population={population}\r\n              region={region}\r\n              capital={capital}\r\n              nativeName={nativeName}\r\n              cioc={cioc}\r\n              alpha2Code={alpha2Code}\r\n              />\r\n            )\r\n          })\r\n        }\r\n      \r\n    </CountryListStyled>\r\n      </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CountryList","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst InputStyled = styled.label`\r\n  display: inline-flex;\r\n  background: var(--white);\r\n  align-items: center;\r\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  padding: 0 2rem;\r\n  border-radius: 5px;\r\n  flex: 1;\r\n  i {\r\n    margin-right: 1em;\r\n    color: #C4C4C4;\r\n  }\r\n  input {\r\n    flex: 1;\r\n    border: none;\r\n    height: 48px;\r\n    line-height: 48px;\r\n    font-size: .7em;\r\n    outline: 0;\r\n    background: var(--white);\r\n    color: var(--black);\r\n    &:-webkit-input-placeholder {\r\n      color: var(--black);\r\n    }\r\n  }\r\n`\r\n\r\nfunction Input({ ...props }) {\r\n  return (\r\n    <InputStyled>\r\n      <i className=\"fas fa-search\"></i>\r\n      <input type=\"text\" {...props} />\r\n    </InputStyled>\r\n  )\r\n}\r\n\r\nexport default Input","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Input from './Input'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst SearchStyled = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  .close {\r\n    position: absolute;\r\n    right: 1em;\r\n    top: 1.2em;\r\n    border-radius: 50%;\r\n    border: none;\r\n    box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n  }\r\n`\r\n\r\nfunction Search() {\r\n  const [inputValue, setInputValue] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const filterByName = (e) => {\r\n    setInputValue(e.target.value)\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: e.target.value\r\n    })\r\n  }\r\n  const clearInput = () => {\r\n    dispatch({\r\n      type: 'SET_COUNTRY_BY_NAME',\r\n      payload: ''\r\n    })\r\n    setInputValue('')\r\n  }\r\n  return (\r\n    <SearchStyled>\r\n      {\r\n        inputValue &&\r\n        <i class=\"fas fa-times close\" onClick={clearInput}></i>\r\n      }\r\n      <Input placeholder=\"Search for a country...\" value={inputValue} onChange={filterByName} />\r\n    </SearchStyled>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components'\r\n\r\nconst RegionFilterStyled = styled.select`\r\n  padding: 1.3em;\r\n  border: none;\r\n  border-radius: 5px;\r\n  outline: 0;\r\n  box-shadow: 0 2px 9px 0 rgba(0,0,0,.05);\r\n background:var(--white);\r\n color:var(--black);\r\n`\r\n\r\nconst filterByRegionAction = (regionSelected) => {\r\n  return {\r\n    type: 'FILTER_BY_REGION',\r\n    payload: { regionSelected },\r\n  };\r\n}\r\n\r\nexport const Region = () => {\r\n  const dispatch = useDispatch();\r\n  const filterByRegion = useSelector((state) => state.filterByRegion);\r\n\r\n  /**\r\n   * Disptach filterByRegion action\r\n   *\r\n   * @param {React.SyntheticEvent} selectEvent\r\n   */\r\n  const onRegionChange = (selectEvent) => {\r\n    const value = selectEvent.target.value;\r\n\r\n    dispatch(filterByRegionAction(value));\r\n  }\r\n\r\n  return (\r\n    <RegionFilterStyled onChange={onRegionChange} value={filterByRegion}>\r\n      <option value=\"\">Filter by region</option>\r\n      <option value=\"Africa\">Africa</option>\r\n      <option value=\"Americas\">Americas</option>\r\n      <option value=\"Asia\">Asia</option>\r\n      <option value=\"Europe\">Europe</option>\r\n      <option value=\"Oceania\">Oceania</option>\r\n    </RegionFilterStyled>\r\n  )\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Search from './Search'\r\nimport { Region as FilterByRegion } from './Region'\r\nimport Wrapper from './Wrapper'\r\n\r\nconst ActionListStyled = styled.div`\r\n  .grid {\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 20px;\r\n    padding:0 1rem;  \r\n\r\n  }\r\n\r\n  @media screen and (min-width:768px){\r\n    .grid{\r\n      grid-template-columns: 480px 1fr 200px\r\n    }\r\n  }\r\n`\r\n\r\nfunction ActionList() {\r\n  return (\r\n    <ActionListStyled>\r\n      <Wrapper>\r\n        <div className=\"grid\">\r\n          <Search />\r\n          <span></span>\r\n          <FilterByRegion />\r\n        </div>\r\n      </Wrapper>\r\n    </ActionListStyled>\r\n  )\r\n}\r\n\r\nexport default ActionList\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HeaderStyled = styled.div`\r\n  background: var(--white);\r\n  margin-bottom: 1px;\r\n\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\r\n  margin-bottom: 15px;\r\n  .content {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    height: 80px;\r\n    align-items: center;\r\n  }\r\n  h1 {\r\n    font-size: 14px;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--dark);\r\n  }\r\n  .dark-mode {\r\n    cursor:pointer;\r\n    .moon {\r\n      display: inline-flex;\r\n      transform: rotate(-25deg);\r\n      margin-right: 15px;\r\n    }\r\n    p{\r\n        font-size: 12px;\r\n        font-weight:600;\r\n    }\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 3em;\r\n\r\n    h1 {\r\n      font-size: 24px;\r\n    }\r\n    .dark-mode {\r\n        p{\r\n        font-size: 16px;\r\n    }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = ({setDarkMode,darkMode}) => {\r\n  const handleClick = (e) => {\r\n    setDarkMode(!darkMode)\r\n  };\r\n\r\n  return (\r\n    <HeaderStyled>\r\n      <Wrapper>\r\n        <div className=\"content\">\r\n          <Link to=\"/\">\r\n            <h1>Where in the world?</h1>\r\n          </Link>\r\n\r\n          <div className=\"dark-mode\">\r\n            <p onClick={handleClick}>\r\n              <i className=\"far fa-moon moon\"></i>\r\n              Dark Mode\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </HeaderStyled>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport styled from  'styled-components'\r\n\r\nconst CountrySelectedStyled=styled.div`\r\n    margin-top: 3em;\r\n  padding-bottom: 3em;\r\n  img {\r\n    width: 100%;\r\n    margin-bottom: 2em;\r\n  }\r\n  .grid {\r\n    display: grid;\r\n    grid-row-gap: 1em;\r\n  }\r\n  .border-item {\r\n    padding: .5em 2em;\r\n    border-radius: 5px;\r\n    margin-right: 15px;\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    display: inline-flex;\r\n    margin-bottom: 15px;\r\n    background: var(--white);\r\n  }\r\n  .languages {\r\n    span {\r\n      margin-right: 5px;\r\n      &:after {\r\n        content: ',';\r\n      }\r\n      &:last-child {\r\n        &:after {\r\n          display: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-column-gap: 120px;\r\n    margin-top: 5em;\r\n    .grid {\r\n      grid-template-columns: 1fr 1fr;\r\n    }\r\n    .borders {\r\n      display: inline-flex;\r\n      margin-right: 1em;\r\n      margin-top: 3.5em;\r\n    }\r\n  }\r\n`\r\n\r\nconst CountrySelected=({\r\n    flag,\r\n    name,\r\n    nativeName,\r\n    population,\r\n    region,\r\n    subregion,\r\n    capital,\r\n    topLevelDomain,\r\n    currencies = [],\r\n    languages = [],\r\n    borders = [],\r\n    alpha2Code\r\n  }) => {\r\n    return (\r\n      <CountrySelectedStyled key={name}>\r\n        <img src={flag} alt=\"\" />\r\n        <div>\r\n          <h2>{name}</h2>\r\n          <div className=\"grid\">\r\n            <div>\r\n              <p><strong>Native Name:</strong> {nativeName}</p>\r\n              <p><strong>Population:</strong> {population}</p>\r\n              <p><strong>Region:</strong> {region}</p>\r\n              <p><strong>Sub Region:</strong> {subregion}</p>\r\n              <p><strong>Capital:</strong> {capital}</p>\r\n            </div>\r\n            <div>\r\n              <p><strong>Top Level Domain:</strong> {topLevelDomain}</p>\r\n              <p><strong>Currencies:</strong> {currencies.map((item) => <span>{item.name}</span>)}</p>\r\n              <p className=\"languages\"><strong>Languages:</strong> {languages.map((item) => <span>{item.name}</span>)}</p>\r\n            </div>\r\n          </div>\r\n          <p className=\"borders\"><strong>Border Countries:</strong></p>\r\n          {borders.map((item) => <span className=\"border-item\">{item}</span>)}\r\n        </div>\r\n      </CountrySelectedStyled>\r\n    )\r\n  }\r\n  \r\n  export default CountrySelected","import React,{useState,useEffect} from 'react'\r\nimport styled from  'styled-components'\r\nimport {useSelector} from 'react-redux'\r\nimport CountrySelected from '../Components/CountrySelected'\r\nimport Wrapper from '../Components/Wrapper'\r\n\r\nconst CountryPageStyled= styled.div`\r\n.back {\r\n    background: var(--white);\r\n    box-shadow: 0 0 5px rgba(0,0,0,.3);\r\n    padding: .7em 2.2em;\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n    margin-top: 1em;\r\n    color: var(--black);\r\n    i {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  @media screen and (min-width: 1024px) {\r\n    .back {\r\n      margin-top: 3em;\r\n    }\r\n  }\r\n`\r\n\r\nconst CountryPage = ({match,history }) => {\r\n    let DBcountry = useSelector(state => state.countryList.find(item => item.alpha2Code === match.params.id))\r\n    const [country,setCountry] =useState(DBcountry);\r\n    \r\n    useEffect(()=>{\r\n      if (!country) {\r\n        fetch(`https://restcountries.eu/rest/v2/alpha/${match.params.id.toLowerCase()}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setCountry(data)\r\n          })\r\n      }\r\n    },[country,match.params.id])\r\n    \r\n\r\n   const handleClick= () => {\r\n        history.goBack()\r\n      }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <CountryPageStyled >\r\n            <button className=\"back\" onClick={handleClick}><i className=\"fas fa-long-arrow-alt-left\"></i> Back</button>\r\n                <CountrySelected {...country} />\r\n            </CountryPageStyled>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default CountryPage\r\n","import React,{useState,useEffect} from \"react\";\nimport \"./App.css\";\nimport CountryList from \"./Components/Country-List\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Reducer from \"./Redux/Reducer\";\nimport ActionList from \"./Components/Action-List\";\nimport Header from \"./Components/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport CountryPage from './Pages/Country-Page'\n\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: \"\",\n};\n\nconst store = createStore(Reducer, initialState);\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false)\n  const [checked, setChecked] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addListener(changeMedia)\n    setDarkMode(mq.matches)\n    setChecked(mq.matches)\n    return () => {\n      mq.removeListener(changeMedia)\n    }\n  }, [])\n\n\n  return (\n    <main className={mainClass}>\n    <Provider store={store}>\n      <Router>\n        <Header setDarkMode={setDarkMode} darkMode={darkMode} />\n        <Switch>\n          <Route path=\"/country/:id\" component={CountryPage} />\n          <Route path=\"/\">\n            <ActionList />\n            <CountryList />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  </main>\n  );\n}\n\nexport default App;\n","export default function reducer(state, action) {\r\n  console.log(action)\r\n  switch (action.type) {\r\n    case 'SET_COUNTRY_LIST': {\r\n      console.log('voy a actualizar la lista de paises')\r\n      return { ...state, countryList: action.payload }\r\n    }\r\n\r\n    case 'SET_COUNTRY_BY_NAME': {\r\n      let list\r\n      if (state.filterByRegion !== '') {\r\n        list = state.coutryFilteredByRegion\r\n      } else {\r\n        list = state.countryList\r\n      }\r\n      const countryListByName = list.filter(country => country.name.toLowerCase().includes(action.payload.toLowerCase()))\r\n      return { ...state, countryListByName }\r\n    }\r\n\r\n\r\n    case 'FILTER_BY_REGION': {\r\n      const { regionSelected } = action.payload;\r\n\r\n      if ('' === regionSelected) {\r\n        return { ...state, coutryFilteredByRegion: [], filterByRegion: '', };\r\n      }\r\n\r\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected);\r\n\r\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}